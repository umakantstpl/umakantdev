{"version":3,"sources":["logo.svg","Home.js","serviceWorker.js","component/Header.js","component/Login.js","component/Signup.js","component/NavbarItems.js","component/Profile.js","component/Logout.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","lib","className","primary","lg","React","Component","Boolean","window","location","hostname","match","Header","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","username","current","value","password","errors","handleValidation","length","setState","push","localStorage","setItem","newusername","getItem","newpassword","sessionStorage","history","createRef","state","component_Header","src","logo","alt","onSubmit","id","htmlFor","type","ref","Signup","email","cpassword","website","dateofbirth","console","log","pop","NavbarItems","auth","navitems","name","url","map","nav","key","Link","to","Profile","class","title","href","Logout","clear","ReactDOM","render","BrowserRouter","expand","light","bg","navbar","Nav","mr","component_NavbarItems","Route","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mKCoBzBC,mLAdP,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,UAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,SAAD,wBACAH,EAAAC,EAAAC,cAACC,EAAA,KAAD,uIACAH,EAAAC,EAAAC,cAAA,MAAIE,UAAU,SACdJ,EAAAC,EAAAC,cAAA,iHACAF,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQE,SAAO,EAACC,IAAE,GAAlB,uBAVDC,IAAMC,WCSLC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,yGCJSC,mLAVP,OACId,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,sCALCM,aCsGJO,cAnGb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KASRQ,aAAe,SAACC,GACdA,EAAEC,iBACF,IAAMC,EAAWV,EAAKU,SAASC,QAAQC,MACjCC,EAAWb,EAAKa,SAASF,QAAQC,MACjCE,EAASd,EAAKe,iBAAiBL,EAAUG,GAO3CC,EAAOE,OAAS,GAClBhB,EAAKiB,SAAS,CAAEH,YAtBDd,EA2BnBe,iBAAmB,SAACL,EAAUG,GAC5B,IAAMC,EAAS,GACS,IAApBJ,EAASM,OACXF,EAAOI,KAAK,4BAEZC,aAAaC,QAAQ,WAAYV,GAG/BG,EAASG,OAAS,EACpBF,EAAOI,KAAK,iDAEZC,aAAaC,QAAQ,WAAYP,GAGnC,IAAMQ,EAAcF,aAAaG,QAAQ,eACnCC,EAAcJ,aAAaG,QAAQ,eAWzC,OATGZ,IAAaW,GAAeR,IAAaU,GAE1CC,eAAeJ,QAAQ,WAAY,WACnCpB,EAAKD,MAAM0B,QAAQP,KAAK,aAExBJ,EAAOI,KAAK,uCAIPJ,GAlDPd,EAAKU,SAAWpB,IAAMoC,YACtB1B,EAAKa,SAAWvB,IAAMoC,YACtB1B,EAAK2B,MAAQ,CACXb,OAAQ,IANOd,wEAyDjB,OACEjB,EAAAC,EAAAC,cAAA,WACMF,EAAAC,EAAAC,cAAC2C,EAAD,MACA7C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACfJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAChBJ,EAAAC,EAAAC,cAAA,OAAK4C,IAAKC,IAAM3C,UAAU,WAAW4C,IAAI,WAG3ChD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACfJ,EAAAC,EAAAC,cAAA,4CACAF,EAAAC,EAAAC,cAAA,QAAM+C,SAAU7B,KAAKI,cACnBxB,EAAAC,EAAAC,cAAA,SAAOgD,GAAG,gBAAgB9C,UAAU,oCACjCgB,KAAKwB,MAAMb,OAAO,IAErB/B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOiD,QAAQ,WAAf,aACAnD,EAAAC,EAAAC,cAAA,SAAOkD,KAAK,OAAOhD,UAAU,eAAeiD,IAAKjC,KAAKO,WACtD3B,EAAAC,EAAAC,cAAA,SAAOgD,GAAG,eAAe9C,UAAU,oCAChCgB,KAAKwB,MAAMb,OAAO,KAGzB/B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOiD,QAAQ,YAAf,aACAnD,EAAAC,EAAAC,cAAA,SAAOkD,KAAK,WAAWhD,UAAU,eAAeiD,IAAKjC,KAAKU,WAC1D9B,EAAAC,EAAAC,cAAA,SAAOgD,GAAG,gBAAgB9C,UAAU,oCACjCgB,KAAKwB,MAAMb,OAAO,KAGzB/B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAASE,UAAU,mBAAnB,uBAzFFG,IAAMC,WC0JT8C,cAzJb,SAAAA,EAAYtC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkC,IACjBrC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoC,GAAA/B,KAAAH,KAAMJ,KAcRQ,aAAe,SAACC,GACdA,EAAEC,iBACF,IAAMC,EAAWV,EAAKU,SAASC,QAAQC,MACjC0B,EAAWtC,EAAKsC,MAAM3B,QAAQC,MAC9BC,EAAWb,EAAKa,SAASF,QAAQC,MACjC2B,EAAYvC,EAAKuC,UAAU5B,QAAQC,MACnClB,EAAWM,EAAKN,SAASiB,QAAQC,MACjC4B,EAAUxC,EAAKwC,QAAQ7B,QAAQC,MAC/B6B,EAAczC,EAAKyC,YAAY9B,QAAQC,MACvCE,EAASd,EAAKe,iBAAiBL,EAAU4B,EAAOzB,EAAU0B,GAE7D7C,GACDyB,aAAaC,QAAQ,WAAY1B,GAEhC8C,GACDrB,aAAaC,QAAQ,UAAWoB,GAE/BC,GACDtB,aAAaC,QAAQ,cAAeqB,GAElC3B,EAAOE,OAAS,EAClBhB,EAAKiB,SAAS,CAAEH,WAGhBd,EAAKD,MAAM0B,QAAQP,KAAK,WAvCTlB,EA2CnBe,iBAAmB,SAACL,EAAU4B,EAAOzB,EAAU0B,GAC7C,IAAMzB,EAAS,GA+Bf,OA9BwB,IAApBJ,EAASM,OACXF,EAAOI,KAAK,4BAEZC,aAAaC,QAAQ,cAAeV,GAEjB,IAAjB4B,EAAMtB,OACRF,EAAOI,KAAK,yBAEZC,aAAaC,QAAQ,WAAYkB,GAE/BzB,EAASG,OAAS,EACpBF,EAAOI,KAAK,kDAEZwB,QAAQC,IAAI,iBACZxB,aAAaC,QAAQ,cAAeP,IAGd,IAArB0B,EAAUvB,OACXF,EAAOI,KAAK,sCACHqB,IAAc1B,EACvBC,EAAOI,KAAK,8CAEZC,aAAaC,QAAQ,eAAgBmB,GAGlB,IAAlBzB,EAAOE,QACRF,EAAO8B,MAGTF,QAAQC,IAAI7B,GACLA,GAxEPd,EAAKU,SAAWpB,IAAMoC,YACtB1B,EAAKsC,MAAWhD,IAAMoC,YACtB1B,EAAKa,SAAWvB,IAAMoC,YACtB1B,EAAKuC,UAAYjD,IAAMoC,YACvB1B,EAAKN,SAAWJ,IAAMoC,YACtB1B,EAAKwC,QAAUlD,IAAMoC,YACrB1B,EAAKyC,YAAenD,IAAMoC,YAC1B1B,EAAK2B,MAAQ,CACXb,OAAQ,IAXOd,wEA+EjB,OACIjB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC2C,EAAD,MACA7C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACfJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAChBJ,EAAAC,EAAAC,cAAA,OAAK4C,IAAKC,IAAM3C,UAAU,WAAW4C,IAAI,WAG3ChD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACfJ,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,QAAM+C,SAAU7B,KAAKI,cACjBxB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOiD,QAAQ,WAAf,aACAnD,EAAAC,EAAAC,cAAA,SAAOkD,KAAK,OAAOhD,UAAU,eAAeiD,IAAKjC,KAAKO,WACtD3B,EAAAC,EAAAC,cAAA,SAAOgD,GAAG,eAAe9C,UAAU,oCAChCgB,KAAKwB,MAAMb,OAAO,KAGzB/B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOiD,QAAQ,SAAf,UACAnD,EAAAC,EAAAC,cAAA,SAAOkD,KAAK,OAAOhD,UAAU,eAAeiD,IAAKjC,KAAKmC,QACtDvD,EAAAC,EAAAC,cAAA,SAAOgD,GAAG,eAAe9C,UAAU,oCAChCgB,KAAKwB,MAAMb,OAAO,KAGzB/B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOiD,QAAQ,YAAf,aACAnD,EAAAC,EAAAC,cAAA,SAAOkD,KAAK,WAAWhD,UAAU,eAAeiD,IAAKjC,KAAKU,WAC1D9B,EAAAC,EAAAC,cAAA,SAAOgD,GAAG,eAAe9C,UAAU,oCAChCgB,KAAKwB,MAAMb,OAAO,KAGzB/B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOiD,QAAQ,aAAf,qBACAnD,EAAAC,EAAAC,cAAA,SAAOkD,KAAK,WAAWhD,UAAU,eAAeiD,IAAKjC,KAAKoC,YAC1DxD,EAAAC,EAAAC,cAAA,SAAOgD,GAAG,eAAe9C,UAAU,oCAChCgB,KAAKwB,MAAMb,OAAO,KAGzB/B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOiD,QAAQ,YAAf,aACAnD,EAAAC,EAAAC,cAAA,SAAOkD,KAAK,OAAOhD,UAAU,eAAeiD,IAAKjC,KAAKT,WACtDX,EAAAC,EAAAC,cAAA,SAAOgD,GAAG,gBAAgB9C,UAAU,oCAApC,aAIJJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOiD,QAAQ,WAAf,YACAnD,EAAAC,EAAAC,cAAA,SAAOkD,KAAK,OAAOhD,UAAU,eAAeiD,IAAKjC,KAAKqC,UACtDzD,EAAAC,EAAAC,cAAA,SAAOgD,GAAG,eAAe9C,UAAU,oCAAnC,aAIJJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,SAAOiD,QAAQ,eAAf,kBACAnD,EAAAC,EAAAC,cAAA,SAAOkD,KAAK,OAAOhD,UAAU,eAAeiD,IAAKjC,KAAKsC,cACtD1D,EAAAC,EAAAC,cAAA,SAAOgD,GAAG,mBAAmB9C,UAAU,oCAAvC,aAIJJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQE,UAAU,mBAAlB,uBA/ILG,IAAMC,oBC2DZsD,cAzDX,SAAAA,EAAY9C,GAAM,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0C,GACd7C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4C,GAAAvC,KAAAH,KAAMJ,IACN,IAAM+C,EAAOtB,eAAeF,QAAQ,YAFtB,OAIVtB,EAAK2B,MADG,YAATmB,EACc,CACTC,SAAS,CACL,CACId,GAAI,EACJe,KAAM,OACNC,IAAM,KAEV,CACIhB,GAAI,EACJe,KAAM,QACNC,IAAM,UAEV,CACIhB,GAAI,EACJe,KAAM,SACNC,IAAM,aAKL,CACTF,SAAS,CACL,CACId,GAAI,EACJe,KAAM,OACNC,IAAM,KAEV,CACIhB,GAAI,EACJe,KAAM,UACNC,IAAM,YAEV,CACIhB,GAAI,EACJe,KAAM,SACNC,IAAM,aAvCRjD,wEA8Cd,OAAOG,KAAKwB,MAAMoB,SAASG,IAAK,SAAAC,GAC5B,OACQpE,EAAAC,EAAAC,cAAA,MAAIE,UAAU,WAAWiE,IAAKD,EAAIlB,IAC9BlD,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAMC,GAAIH,EAAIF,IAAK9D,UAAU,YAAYgE,EAAIH,gBAlD3CzD,aCsCXgE,mLApCP,OACIxE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC2C,EAAD,MACA7C,EAAAC,EAAAC,cAAA,OAAKuE,MAAM,aACPzE,EAAAC,EAAAC,cAAA,OAAKuE,MAAM,OACPzE,EAAAC,EAAAC,cAAA,OAAKuE,MAAM,+BACPzE,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cACdJ,EAAAC,EAAAC,cAAA,OAAK4C,IAAKC,IAAM3C,UAAU,WAAW4C,IAAI,WAGjDhD,EAAAC,EAAAC,cAAA,OAAKuE,MAAM,+BACPzE,EAAAC,EAAAC,cAAA,OAAKuE,MAAM,gBACPzE,EAAAC,EAAAC,cAAA,OAAKuE,MAAM,OACPzE,EAAAC,EAAAC,cAAA,OAAKuE,MAAM,qBACPzE,EAAAC,EAAAC,cAAA,OAAK4C,IAAI,8BAA8BE,IAAI,GAAGyB,MAAM,gCAExDzE,EAAAC,EAAAC,cAAA,OAAKuE,MAAM,qBACPzE,EAAAC,EAAAC,cAAA,UAAKkC,aAAaG,QAAQ,aAC1BvC,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,QAAMwE,MAAOtC,aAAaG,QAAQ,aAAcH,aAAaG,QAAQ,cAC5EvC,EAAAC,EAAAC,cAAA,SACCkC,aAAaG,QAAQ,YACtBvC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGyE,KAAMvC,aAAaG,QAAQ,YAAaH,aAAaG,QAAQ,YAChEvC,EAAAC,EAAAC,cAAA,WACCkC,aAAaG,QAAQ,8BA3BxC/B,aCcPoE,cAfX,SAAAA,EAAY5D,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwD,GACd3D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0D,GAAArD,KAAAH,KAAMJ,IACNyB,eAAeoC,QACfzC,aAAayC,QACb5D,EAAKD,MAAM0B,QAAQP,KAAK,KAJVlB,wEAOd,OACIjB,EAAAC,EAAAC,cAAA,4BATSM,aCYrBsE,IAASC,OACL/E,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,KACEhF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,OAAD,CAAQ8E,OAAO,KAAKC,OAAK,EAACC,GAAG,SACzBnF,EAAAC,EAAAC,cAACC,EAAA,SAAD,CAAUiF,QAAM,GACZpF,EAAAC,EAAAC,cAACC,EAAA,OAAOkF,IAAR,CAAYC,GAAG,QACbtF,EAAAC,EAAAC,cAACC,EAAA,IAAD,KACEH,EAAAC,EAAAC,cAACqF,EAAD,UAKZvF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW5F,IACjCC,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAW5E,IAChCf,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWrC,IACjCtD,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAWnB,IAClCxE,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWf,MAGvCgB,SAASC,eAAe,SPgGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.2462cee6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { Jumbotron, Display4, Lead, Button } from 'bootstrap-4-react';\n\nclass Home extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <Jumbotron>\n                    <Display4>React First App</Display4>\n                    <Lead>This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</Lead>\n                    <hr className=\"my-4\" />\n                    <p>It uses utility classes for typography and spacing to space content out within the larger container.</p>\n                    <Button primary lg>Learn more</Button>\n                </Jumbotron>\n            </div>\n        );\n    }\n}\n\nexport default Home;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\n\nclass Header extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"jumbotron\">\n                    <h3>React First App</h3>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport logo from '../logo.svg';\nimport Header from './Header';\n\nclass Login extends React.Component {\n    constructor(props) {\n      super(props);\n  \n      this.username = React.createRef();\n      this.password = React.createRef();\n      this.state = {\n        errors: []\n      };\n    }\n  \n    handleSubmit = (e) => {\n      e.preventDefault();\n      const username = this.username.current.value;\n      const password = this.password.current.value;\n      const errors = this.handleValidation(username, password);\n      \n      // var username = localStorage.getItem('username');\n      // var password = localStorage.getItem('password');\n\n\n\n      if (errors.length > 0) {\n        this.setState({ errors });\n        return;\n      }\n    };\n  \n    handleValidation = (username, password) => {\n      const errors = [];\n      if (username.length === 0) {\n        errors.push(\"Username cannot be empty\");\n      } else {\n        localStorage.setItem('username', username);\n      }\n      \n      if (password.length < 6) {\n        errors.push(\"Password should be at least 6 characters long\");\n      } else {\n        localStorage.setItem('password', password);\n      }\n\n      const newusername = localStorage.getItem('newusername');\n      const newpassword = localStorage.getItem('newpassword');\n      \n      if(username === newusername && password === newpassword){\n        //console.log('Success');\n        sessionStorage.setItem('userAuth', 'Success');\n        this.props.history.push(\"/profile\");\n      } else {\n        errors.push(\"Username and Password are incorrect\");\n        //console.log(\"Username and Password are incorrect\");\n      }\n      \n      return errors;\n    };\n  \n    render() {\n      return (\n        <div>\n              <Header />\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col-md-6 App\">\n                  <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                  </header>\n                  </div>\n                  <div className=\"col-md-6\">\n                  <h3>Please Login into the website.</h3>\n                  <form onSubmit={this.handleSubmit}>\n                    <small id=\"passwordError\" className=\"form-text text-muted error-color\">\n                      {this.state.errors[2]}\n                    </small>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"usename\">Username:</label>\n                        <input type=\"text\" className=\"form-control\" ref={this.username} />    \n                        <small id=\"usenameError\" className=\"form-text text-muted error-color\">\n                          {this.state.errors[0]}\n                        </small>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password:</label>\n                        <input type=\"password\" className=\"form-control\" ref={this.password} />    \n                        <small id=\"passwordError\" className=\"form-text text-muted error-color\">\n                          {this.state.errors[1]}\n                        </small>\n                    </div>\n                    <div>\n                      <button  className=\"btn btn-primary\">Submit</button>\n                    </div>\n                  </form>\n                  </div>\n                </div>\n              </div>\n          </div>\n      );\n    }\n  }\n\n  export default Login;","import React from 'react';\r\nimport logo from '../logo.svg';\r\nimport Header from './Header';\r\n\r\nclass Signup extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.username = React.createRef();\r\n      this.email    = React.createRef();\r\n      this.password = React.createRef();\r\n      this.cpassword = React.createRef();\r\n      this.location = React.createRef();\r\n      this.website = React.createRef();\r\n      this.dateofbirth  = React.createRef();\r\n      this.state = {\r\n        errors: []\r\n      };\r\n    }\r\n  \r\n    handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      const username = this.username.current.value;\r\n      const email    = this.email.current.value;\r\n      const password = this.password.current.value;\r\n      const cpassword = this.cpassword.current.value;\r\n      const location = this.location.current.value;\r\n      const website = this.website.current.value;\r\n      const dateofbirth = this.dateofbirth.current.value;\r\n      const errors = this.handleValidation(username, email, password, cpassword);\r\n      \r\n      if(location){\r\n        localStorage.setItem('location', location);\r\n      }\r\n      if(website){\r\n        localStorage.setItem('website', website);\r\n      }\r\n      if(dateofbirth){\r\n        localStorage.setItem('dateofbirth', dateofbirth);\r\n      }\r\n      if (errors.length > 0) {\r\n        this.setState({ errors });\r\n        return;\r\n      } else {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    };\r\n  \r\n    handleValidation = (username, email, password, cpassword) => {\r\n      const errors = [];\r\n      if (username.length === 0) {\r\n        errors.push(\"Username cannot be empty\");\r\n      } else {\r\n        localStorage.setItem('newusername', username);\r\n      }\r\n      if (email.length === 0) {\r\n        errors.push(\"Email cannot be empty\");\r\n      } else {\r\n        localStorage.setItem('newemail', email);\r\n      }\r\n      if (password.length < 6) {\r\n        errors.push(\"Password should be at least 6 characters long\");\r\n      } else {\r\n        console.log('Password Okay');\r\n        localStorage.setItem('newpassword', password);\r\n      }\r\n      \r\n      if(cpassword.length === 0) {\r\n        errors.push(\"Confirm Password can not be blank.\");\r\n      } else if (cpassword !== password) {\r\n        errors.push(\"Confirm Password not matched with Password\");\r\n      } else {\r\n        localStorage.setItem('newcpassword', cpassword);\r\n      }\r\n      \r\n      if(errors.length === 0){\r\n        errors.pop();\r\n      }\r\n\r\n      console.log(errors);\r\n      return errors;\r\n    };\r\n  \r\n    render() {\r\n      return (\r\n          <div>\r\n              <Header />\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6 App\">\r\n                  <header className=\"App-header\">\r\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                  </header>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                  <h3>Signup</h3>\r\n                  <form onSubmit={this.handleSubmit}>\r\n                      <div className=\"form-group\">\r\n                          <label htmlFor=\"usename\">Username:</label>\r\n                          <input type=\"text\" className=\"form-control\" ref={this.username} />    \r\n                          <small id=\"usenameError\" className=\"form-text text-muted error-color\">\r\n                            {this.state.errors[0]}\r\n                          </small>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                          <label htmlFor=\"email\">Email:</label>\r\n                          <input type=\"text\" className=\"form-control\" ref={this.email} />\r\n                          <small id=\"usenameError\" className=\"form-text text-muted error-color\">\r\n                            {this.state.errors[1]}\r\n                          </small>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                          <label htmlFor=\"password\">Password:</label>\r\n                          <input type=\"password\" className=\"form-control\" ref={this.password} />\r\n                          <small id=\"usenameError\" className=\"form-text text-muted error-color\">\r\n                            {this.state.errors[2]}\r\n                          </small>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                          <label htmlFor=\"cpassword\">Confirm Password:</label>\r\n                          <input type=\"password\" className=\"form-control\" ref={this.cpassword} />\r\n                          <small id=\"usenameError\" className=\"form-text text-muted error-color\">\r\n                            {this.state.errors[3]}\r\n                          </small>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                          <label htmlFor=\"location\">Location:</label>\r\n                          <input type=\"text\" className=\"form-control\" ref={this.location} />\r\n                          <small id=\"locationError\" className=\"form-text text-muted error-color\">\r\n                            Optional\r\n                          </small>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                          <label htmlFor=\"website\">Website:</label>\r\n                          <input type=\"text\" className=\"form-control\" ref={this.website} />\r\n                          <small id=\"websiteError\" className=\"form-text text-muted error-color\">\r\n                            Optional\r\n                          </small>\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                          <label htmlFor=\"dateofbirth\">Date of Birth:</label>\r\n                          <input type=\"text\" className=\"form-control\" ref={this.dateofbirth} />\r\n                          <small id=\"dateofbirthError\" className=\"form-text text-muted error-color\">\r\n                            Optional\r\n                          </small>\r\n                      </div>\r\n                      <div>\r\n                          <button className=\"btn btn-primary\">Submit</button>\r\n                      </div>\r\n                  </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n          </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Signup;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\n\n\nclass NavbarItems extends Component {\n    constructor(props){\n        super(props);\n        const auth = sessionStorage.getItem('userAuth');\n        if(auth !== 'Success'){\n            this.state = {\n                navitems:[\n                    {\n                        id: 1,\n                        name: \"Home\",\n                        url : \"/\"\n                    },\n                    {\n                        id: 2,\n                        name: \"Login\",\n                        url : \"/login\"\n                    },\n                    {\n                        id: 3,\n                        name: \"Signup\",\n                        url : \"/signup\"\n                    },\n                ]\n            }\n        } else {\n            this.state = {\n                navitems:[\n                    {\n                        id: 1,\n                        name: \"Home\",\n                        url : \"/\"\n                    },\n                    {\n                        id: 2,\n                        name: \"Profile\",\n                        url : \"/profile\"\n                    }, \n                    {\n                        id: 3,\n                        name: \"Logout\",\n                        url : \"/logout\"\n                    },\n                ]\n            } \n        }\n    }\n    render() {\n        return this.state.navitems.map( nav => {\n            return(\n                    <li className=\"nav-item\" key={nav.id}>\n                        <Link to={nav.url} className=\"nav-link\">{nav.name}</Link>\n                    </li>\n              );\n          }\n        )\n    };\n}\n\nexport default NavbarItems;","import React, { Component } from 'react';\nimport Header from './Header';\nimport logo from '../logo.svg';\n\nclass Profile extends Component {\n\n    render() {\n        return (\n            <div>\n                <Header />  \n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col-xs-12 col-sm-6 col-md-6\">\n                            <header className=\"App-header\">\n                                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                            </header>\n                        </div>\n                        <div class=\"col-xs-12 col-sm-6 col-md-6\">\n                            <div class=\"well well-sm\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-6 col-md-4\">\n                                        <img src=\"http://placehold.it/380x500\" alt=\"\" class=\"img-rounded img-responsive\" />\n                                    </div>\n                                    <div class=\"col-sm-6 col-md-8\">\n                                        <h4>{localStorage.getItem('username')}</h4>\n                                        <small><cite title={localStorage.getItem('location')}>{localStorage.getItem('location')}</cite></small>\n                                        <p>\n                                        {localStorage.getItem('newemail')}\n                                        <br />\n                                        <a href={localStorage.getItem('website')}>{localStorage.getItem('website')}</a>\n                                        <br />\n                                        {localStorage.getItem('dateofbirth')}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Profile;","import React, { Component } from 'react';\n\nclass Logout extends Component {\n    constructor(props){\n        super(props);\n        sessionStorage.clear();\n        localStorage.clear();\n        this.props.history.push(\"/\");\n    }\n    render() {\n        return (\n            <div>\n                Logout\n            </div>\n        );\n    }\n}\n\nexport default Logout;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './Home';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Login from './component/Login';\nimport Signup from './component/Signup';\nimport NavbarItems from './component/NavbarItems';\nimport Profile from './component/Profile';\nimport Logout from './component/Logout';\nimport { Navbar, Nav, Collapse } from 'bootstrap-4-react';\n\nReactDOM.render(\n    <Router>\n      <div>\n        <Navbar expand=\"lg\" light bg=\"light\">\n            <Collapse navbar>\n                <Navbar.Nav mr=\"auto\">\n                  <Nav>\n                    <NavbarItems />\n                  </Nav>\n                </Navbar.Nav>\n              </Collapse>\n          </Navbar>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/signup\" component={Signup} />\n        <Route path=\"/profile\" component={Profile} />\n        <Route path=\"/logout\" component={Logout} />\n      </div>\n  </Router>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}